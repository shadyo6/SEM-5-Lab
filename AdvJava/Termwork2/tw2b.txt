import java.util.*;
public class tw2b {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        HashMap<String,String> hash = new HashMap<>();
        while(true){
            System.out.println("1.Add Country and its Capital state\n2.Retrieve Capital State using Country Name Specified\n3.Retrieve all the Countries\n4.Retrieve All the Capitals\n5.Retrieve Countries and its capitals\n6.Change the Capitals associated with Countries Specified\n7.Change Capitals in UpperCase\n8.Remove Capital by specifying Countries\n9.Remove Countries and capitals\n10.Display\n11.Exit");
            System.out.println("Enter Your Choice: ");
            int choice = s.nextInt();
            switch(choice){
                case 1: System.out.println("How many Entries? : ");
                        int n = s.nextInt();
                        System.out.println("enter the Countries and Capitals: ");
                        for(int i = 0; i<n; i++){
                            String Country = s.next();
                            String Capitals = s.next();
                            hash.put(Country,Capitals);
                        }
                        System.out.println("Entered Countries and the corresponding Capitals: ");
                        break;
                case 2: System.out.println("Enter the Country: ");
                        String CSearch = s.next();
                        if(hash.containsKey(CSearch))
                            System.out.println("Capital City of "+CSearch+" is "+hash.get(CSearch));
                        else
                            System.out.println("Specified Country Not Found");
                        System.out.println();
                        break;
                case 3: System.out.println("Countries: ");
                        System.out.println(hash.keySet());
                        System.out.println();
                        break;
                case 4: System.out.println("Capitals: ");
                        System.out.println(hash.values());
                        System.out.println();
                        break;
                case 5: System.out.println("Countries with its capitals: ");
                        hash.forEach((k, v)-> System.out.println(v + " is the Capital of "+ k));
                        System.out.println();
                        break;
                case 6: System.out.println("Enter the country you want to Replace the capital");
                        String C = s.next();
                        if(hash.containsKey(C)){
                            System.out.println("Capital to be Replaced with: ");
                            String ca = s.next();
                            hash.replace(C,ca);
                        }
                        else
                            System.out.println("Key Not Found..");
                        break;
                case 7: if(hash.isEmpty()){
                            System.out.println("HashMap empty...");
                        }
                        else{
                            System.out.println("Change in HashMap After Choosing this Option: ");
                            hash.replaceAll((key, value) -> value.toUpperCase());
                            System.out.println(hash);
                        }
                        break;
                case 8: System.out.println("Enter the country you want to Remove the capital");
                        String Co = s.next();
                        if(hash.containsKey(Co)){
                            hash.remove(Co);
                        }
                        else
                            System.out.println("Key Not Found..");
                        break;
                case 9: hash.clear();
                        System.out.println("Hashmap Cleared..");
                        break;
                case 10:System.out.println(hash);
                        break;
                case 11:System.exit(0);
                        
                default:System.out.println("Invalid argument");
                        System.exit(0);
            }
        }
    }
}